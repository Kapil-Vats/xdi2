package xdi2.core.impl.file;

import java.io.File;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import xdi2.core.ContextNode;
import xdi2.core.Graph;
import xdi2.core.exceptions.Xdi2RuntimeException;
import xdi2.core.impl.AbstractGraph;

public class FileGraph extends AbstractGraph implements Graph {

	private static final long serialVersionUID = 8979035878235290607L;

	private static final Logger log = LoggerFactory.getLogger(FileGraph.class);

	private File file;

	private boolean transaction;

	FileGraph(File file) {

		this.file = file;
	}

	@Override
	public ContextNode getRootContextNode() {

		return this.rootContextNode;
	}

	@Override
	public void close() {

	}

	@Override
	public void beginTransaction() {

		log.trace("beginTransaction()");

		if (this.transaction) throw new Xdi2RuntimeException("Already have an open transaction.");

		log.debug("Beginning Transaction...");

		this.transaction = true;

		log.debug("Began transaction...");
	}

	@Override
	public void commitTransaction() {

		log.trace("commitTransaction()");

		if (! this.transaction) throw new Xdi2RuntimeException("No open transaction.");

		this.transaction = false;

		log.debug("Committed transaction...");
	}

	/*
	 * Misc methods
	 */

	int getSortMode() {

		return this.sortmode;
	}
}
